// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// ‚ö†Ô∏è SECURITY WARNING: Para produ√ß√£o, sempre use vari√°veis de ambiente (.env)
// As credenciais abaixo s√£o apenas fallback para desenvolvimento
const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL || 'YOUR_SUPABASE_URL_HERE';
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY || 'YOUR_SUPABASE_ANON_KEY_HERE';

// Validar se as vari√°veis est√£o configuradas
if (!import.meta.env.VITE_SUPABASE_URL || !import.meta.env.VITE_SUPABASE_ANON_KEY) {
  console.warn('‚ö†Ô∏è AVISO: Usando credenciais hardcoded. Configure o arquivo .env.local para desenvolvimento!');
  console.warn('üìù Dica: Copie .env.example para .env.local e configure suas credenciais');
}

console.log('üîß Supabase Client: Config loaded:', {
  url: SUPABASE_URL,
  key: SUPABASE_PUBLISHABLE_KEY ? '‚úÖ Present' : '‚ùå Missing',
  usingEnvVars: !!(import.meta.env.VITE_SUPABASE_URL && import.meta.env.VITE_SUPABASE_ANON_KEY),
  source: import.meta.env.VITE_SUPABASE_URL ? 'environment' : 'fallback'
});

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});